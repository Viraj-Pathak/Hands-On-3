# -*- coding: utf-8 -*-
"""Merge Sort.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qe3YSilC8K0h8AM-fZOcGp4llC25KD5p
"""

def viraj_merge_sort(arr):
    if len(arr) <= 1:
        return arr

    mid = len(arr) // 2
    left_half = viraj_merge_sort(arr[:mid])
    right_half = viraj_merge_sort(arr[mid:])

    return viraj_merge(left_half, right_half)

def viraj_merge(left, right):
    merged = []
    left_idx, right_idx = 0, 0

    while left_idx < len(left) and right_idx < len(right):
        if left[left_idx] < right[right_idx]:
            merged.append(left[left_idx])
            left_idx += 1
        else:
            merged.append(right[right_idx])
            right_idx += 1

    while left_idx < len(left):
        merged.append(left[left_idx])
        left_idx += 1

    while right_idx < len(right):
        merged.append(right[right_idx])
        right_idx += 1

    return merged

arr = [5, 2, 4, 7, 1, 3, 2, 6]
sorted_arr = viraj_merge_sort(arr)
print("Sorted array:", sorted_arr)